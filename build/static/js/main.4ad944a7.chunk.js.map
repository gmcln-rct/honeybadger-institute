{"version":3,"sources":["img/quiz-badger-logo.png","components/Header.js","components/Progress.js","context/QuizContext.js","components/Question.js","components/Answer.js","reducers/types.js","components/Answers.js","components/QuestionFile.js","reducers/QuizReducer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Progress","props","current","total","QuizContext","createContext","Question","state","useContext","currentQuestion","question","questions","Answer","classes","selected","push","value","letter","join","onClick","e","dispatch","type","currentAnswer","target","error","answer","Answers","answer_a","answer_b","answer_c","answer_d","questionsLibrary","id","correct_answer","questionSet","max","questionsLength","length","randNum","Math","floor","random","includes","createQuestionSet","quizReducer","action","showResults","answers","App","initialState","useReducer","map","find","questionId","key","renderResultMark","Provider","renderError","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,8C,mMCG5B,SAASC,IACpB,OACI,oCACI,yBAAKC,UAAU,kBACX,yBAAKC,IAAKC,IAAMC,IAAI,8BAA8BH,UAAU,SAC5D,2ECND,SAASI,EAASC,GAC7B,OACI,wBAAIL,UAAU,mBAAd,YAA0CK,EAAMC,QAAhD,OAA6DD,EAAME,OCF3E,IAEeC,EAFKC,0BCCL,SAASC,IAAY,IACxBC,EAASC,qBAAWJ,GAApBG,MACAE,EAA+BF,EAA/BE,gBACFC,EADiCH,EAAdI,UACEF,GAE3B,OACI,wBAAIb,UAAU,iBAAiBc,EAASA,UCNjC,SAASE,EAAOX,GAC3B,IAAIY,EAAU,CAAC,UAcf,OAJIZ,EAAMa,UACND,EAAQE,KAAK,YAIb,4BACAC,MAAOf,EAAMgB,OACbrB,UAAWiB,EAAQK,KAAK,KACxBC,QAhBgB,SAAAC,GAChBnB,EAAMoB,SAAS,CACXC,KCRsB,qBDStBC,cAAeH,EAAEI,OAAOR,QAE5Bf,EAAMoB,SAAS,CAAEC,KCTA,YDSiBG,MAAO,OAYrC,0BAAM7B,UAAU,UACXK,EAAMgB,OADX,KACqBhB,EAAMyB,SEpBxB,SAASC,IAAW,IAAD,EACFnB,qBAAWJ,GAA/BG,EADsB,EACtBA,MAAOc,EADe,EACfA,SACPE,EAA8ChB,EAA9CgB,cAAed,EAA+BF,EAA/BE,gBACjBC,EADgDH,EAAdI,UACbF,GAE3B,OACI,oCACI,kBAACG,EAAD,CAAQK,OAAO,IAAIS,OAAQhB,EAASkB,SAAUP,SAAUA,EAAUP,SAA4B,MAAlBS,IAC5E,kBAACX,EAAD,CAAQK,OAAO,IAAIS,OAAQhB,EAASmB,SAAUR,SAAUA,EAAUP,SAA4B,MAAlBS,IAC5E,kBAACX,EAAD,CAAQK,OAAO,IAAIS,OAAQhB,EAASoB,SAAUT,SAAUA,EAAUP,SAA4B,MAAlBS,IAC5E,kBAACX,EAAD,CAAQK,OAAO,IAAIS,OAAQhB,EAASqB,SAAUV,SAAUA,EAAUP,SAA4B,MAAlBS,KCdjF,IAGDS,EAAmB,CACrB,CACAC,GAAI,EACJvB,SAAW,wFACXkB,SAAU,yGACVC,SAAU,0HACVC,SAAU,gHACVC,SAAU,mJACVG,eAAiB,KAGjB,CACAD,GAAI,EACJvB,SAAW,2EACXkB,SAAU,0DACVC,SAAU,0EACVC,SAAU,4DACVC,SAAU,8GACVG,eAAiB,KAGjB,CACAD,GAAI,EACJvB,SAAW,oEACXkB,SAAU,uCACVC,SAAU,2FACVC,SAAU,gFACVC,SAAU,uDACVG,eAAiB,KAGjB,CACAD,GAAI,EACJvB,SAAW,mCACXkB,SAAU,sFACVC,SAAU,4FACVC,SAAU,wCACVC,SAAU,4CACVG,eAAiB,KAGjB,CACAD,GAAI,EACJvB,SAAW,mDACXkB,SAAU,qDACVC,SAAU,2DACVC,SAAU,mDACVC,SAAU,qDACVG,eAAiB,KAGjB,CACAD,GAAI,EACJvB,SAAW,wEACXkB,SAAU,6KACVC,SAAU,6KACVC,SAAU,oFACVC,SAAU,2GACVG,eAAiB,KAGjB,CACAD,GAAI,EACJvB,SAAW,uFACXkB,SAAU,sEACVC,SAAU,8EACVC,SAAU,wEACVC,SAAU,4EACVG,eAAiB,KAGjB,CACAD,GAAI,EACJvB,SAAW,kEACXkB,SAAU,mLACVC,SAAU,iFACVC,SAAU,uLACVC,SAAU,wGACVG,eAAiB,KAGjB,CACAD,GAAI,EACJvB,SAAW,mGACXkB,SAAU,sEACVC,SAAU,iDACVC,SAAU,gFACVC,SAAU,iGACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,wEACXkB,SAAU,2GACVC,SAAU,sFACVC,SAAU,yDACVC,SAAU,sGACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,+DACXkB,SAAU,kEACVC,SAAU,iFACVC,SAAU,iFACVC,SAAU,iEACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,4GACXkB,SAAU,sEACVC,SAAU,qBACVC,SAAU,0LACVC,SAAU,0LACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,8CACXkB,SAAU,yFACVC,SAAU,qEACVC,SAAU,yEACVC,SAAU,oEACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,kEACXkB,SAAU,+FACVC,SAAU,8KACVC,SAAU,wGACVC,SAAU,6GACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,wEACXkB,SAAU,iFACVC,SAAU,yGACVC,SAAU,8GACVC,SAAU,qFACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,+DACXkB,SAAU,QACVC,SAAU,UACVC,SAAU,OACVC,SAAU,QACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,+EACXkB,SAAU,mJACVC,SAAU,wFACVC,SAAU,kIACVC,SAAU,+DACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,oCACXkB,SAAU,aACVC,SAAU,aACVC,SAAU,eACVC,SAAU,cACVG,eAAiB,KAGjB,CACAD,GAAI,GACJvB,SAAW,2CACXkB,SAAU,iFACVC,SAAU,iDACVC,SAAU,0EACVC,SAAU,0EACVG,eAAiB,qBAGjB,CACAD,GAAI,GACJvB,SAAW,8CACXkB,SAAU,iBACVC,SAAU,WACVC,SAAU,cACVC,SAAU,eACVG,eAAiB,MA2Bd,IAAMC,EAnBZ,SAA2BxB,GAQtB,IAFA,IAJoByB,EAIhBD,EAAc,GACdE,EAAkBL,EAAiBM,OAChCH,EAAYG,OAAS,GAAG,CAC7B,IAAIC,GAPcH,EAOSC,EANpBG,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAML,KAQxCD,EAAYQ,SAASX,EAAiBO,KACzCJ,EAAYpB,KAAKiB,EAAiBO,IAGtC,OAAOJ,EAIcS,G,qBC3NZ,SAASC,EAAYtC,EAAOuC,GACvC,OAAQA,EAAOxB,MACX,IHX0B,qBGYtB,OAAO,eACAf,EADP,CAEIgB,cAAeuB,EAAOvB,gBAE9B,IHf4B,uBGgBxB,OAAO,eACAhB,EADP,CAEIE,gBAAiBqC,EAAOrC,kBAEhC,IHnBiB,YGoBb,OAAO,eACAF,EADP,CAEIkB,MAAOqB,EAAOrB,QAEtB,IHvBwB,mBGwBpB,OAAO,eACAlB,EADP,CAEIwC,YAAaD,EAAOC,cAE5B,IH3BmB,cG4Bf,OAAO,eACAxC,EADP,CAEIyC,QAASF,EAAOE,UAExB,IH/BkB,aGgCd,OAAO,eACAzC,EADP,CAEIyC,QAAS,GACTvC,gBAAiB,EACjBc,cAAe,GACfwB,aAAa,EACbtB,MAAO,KAEf,QACI,OAAOlB,GCtBJ,SAAS0C,IAEtB,IAAItC,EAAYwB,EAKVe,EAAe,CACnBvC,YACAF,gBAAiB,EACjBc,cAAe,GACfyB,QAAS,GACTD,aAAa,EACbtB,MAAO,IAbmB,EAgBH0B,qBAAWN,EAAaK,GAhBrB,mBAgBrB3C,EAhBqB,KAgBfc,EAhBe,KAiBrBZ,EAA+DF,EAA/DE,gBAAiBc,EAA8ChB,EAA9CgB,cAAeyB,EAA+BzC,EAA/ByC,QAASD,EAAsBxC,EAAtBwC,YAAatB,EAASlB,EAATkB,MAGvDf,EAAWC,EAAUF,GAkE3B,OAAIsC,EAEA,yBAAKnD,UAAU,qBACb,kBAACD,EAAD,MACA,uCACA,4BA/CGqD,EAAQI,KAAK,SAAA1B,GAClB,IAAMhB,EAAWC,EAAU0C,MACzB,SAAA3C,GAAQ,OAAIA,EAASuB,KAAOP,EAAO4B,cAInC,OACE,yBAAKC,IAAK7C,EAASuB,IAChBvB,EAASA,SADZ,MAtBiB,SAACA,EAAUgB,GAClC,OAAIhB,EAASwB,iBAAmBR,EAAOA,OAC9B,0BAAM9B,UAAU,WAAhB,qBAEF,0BAAMA,UAAU,UAAhB,iBAmBwB4D,CAAiB9C,EAASgB,QA0CrD,4BAAQ9B,UAAU,kBAAkBuB,QApC1B,WACdE,EAAS,CAACC,KJ9EY,iBIiHlB,YAQF,kBAAC,EAAYmC,SAAb,CAAsBzC,MAAO,CAAET,QAAOc,aACpC,yBAAKzB,UAAU,aACb,kBAACD,EAAD,MACA,kBAACK,EAAD,CAAUG,MAAOQ,EAAU2B,OAAQpC,QAASO,EAAkB,IAC9D,kBAACH,EAAD,MApFY,WAClB,GAAKmB,EAGL,OAAO,yBAAK7B,UAAU,SAAf,KAiFA8D,GACD,kBAAC/B,EAAD,MAEA,4BAAQ/B,UAAU,kBAAkBuB,QAhD/B,WACX,IAAMO,EAAS,CAAC4B,WAAY5C,EAASuB,GAAIP,OAAQH,GAE5CA,GAKLyB,EAAQjC,KAAKW,GAEbL,EAAS,CAAEC,KJ5FY,cI4FO0B,YAC9B3B,EAAS,CAACC,KJjGoB,qBIiGMC,cAAe,KAE/Cd,EAAkB,EAAIE,EAAU2B,OAClCjB,EAAS,CACPC,KJpG4B,uBIqG5Bb,gBAAiBA,EAAkB,IAIvCY,EAAS,CAACC,KJvGkB,mBIuGMyB,aAAa,KAhB7C1B,EAAS,CAACC,KJxFS,YIwFQG,MAAO,mCA4C9B,0BC1HUkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAlD,GACLmD,QAAQnD,MAAMA,EAAMoD,c","file":"static/js/main.4ad944a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quiz-badger-logo.3ee9ec14.png\";","import React from 'react';\nimport logo from '../img/quiz-badger-logo.png';\n\nexport default function Header() {\n    return (\n        <>\n            <div className=\"header-section\">\n                <img src={logo} alt=\"Honey Badger Institute Logo\" className=\"logo\"></img>\n                <h2>Honey Badger Institute of Higher Learning</h2>\n            </div>\n        </>\n    );\n}","import React from 'react'\n\nexport default function Progress(props) {\n    return (\n        <h2 className=\"progress-header\">Question {props.current} of {props.total}</h2>\n\n    );\n}\n\n\n","import { createContext } from 'react';\n\nconst QuizContext = createContext();\n\nexport default QuizContext;\n","import React, {useContext} from 'react';\nimport QuizContext from '../context/QuizContext';\n\nexport default function Question() {\n    const { state} = useContext(QuizContext);\n    const { currentQuestion, questions } = state;\n    const question = questions[currentQuestion];\n\n    return (\n        <h1 className=\"question-text\">{question.question}</h1>\n    );\n}\n","import React from 'react';\nimport { SET_CURRENT_ANSWER, SET_ERROR } from '../reducers/types';\n\nexport default function Answer(props) {\n    let classes = ['answer'];\n\n    const handleClick = e => {\n        props.dispatch({ \n            type: SET_CURRENT_ANSWER, \n            currentAnswer: e.target.value,\n        });\n        props.dispatch({ type: SET_ERROR, error: '' });\n    };\n\n    if (props.selected) {\n        classes.push('selected');\n    }\n\n    return (\n        <button \n        value={props.letter} \n        className={classes.join(' ')} \n        onClick={handleClick}>\n            <span className=\"letter\">\n                {props.letter}. {props.answer}\n            </span>\n        </button>\n    );\n}\n","export const SET_CURRENT_ANSWER = 'SET_CURRENT_ANSWER';\nexport const SET_CURRENT_QUESTION = 'SET_CURRENT_QUESTION';\nexport const SET_ERROR = 'SET_ERROR';\nexport const SET_SHOW_RESULTS = 'SET_SHOW_RESULTS';\nexport const SET_ANSWERS = 'SET_ANSWERS';\nexport const RESET_QUIZ = 'RESET_QUIZ';","import React, { useContext } from 'react';\nimport Answer from './Answer';\nimport QuizContext from '../context/QuizContext';\n\nexport default function Answers() {\n    const { state, dispatch } = useContext(QuizContext);\n    const { currentAnswer, currentQuestion, questions } = state;\n    const question = questions[currentQuestion];\n    \n    return (\n        <>\n            <Answer letter=\"a\" answer={question.answer_a} dispatch={dispatch} selected={currentAnswer === 'a'} />\n            <Answer letter=\"b\" answer={question.answer_b} dispatch={dispatch} selected={currentAnswer === 'b'} />\n            <Answer letter=\"c\" answer={question.answer_c} dispatch={dispatch} selected={currentAnswer === 'c'} />\n            <Answer letter=\"d\" answer={question.answer_d} dispatch={dispatch} selected={currentAnswer === 'd'} />\n        </>\n    );\n}\n","export const quizResultsCount = 0;\n\n\nconst questionsLibrary = [\n    {\n    id: 1,\n    question:  \"When running a JavaScript function, what is the difference between scope and context?\",\n    answer_a: \"Scope is the object that `this` refers to. Context is the environment that the function is written in.\",\n    answer_b: \"Scope refers to the availability of variables while running. The object within which the function runs is the context. \",\n    answer_c: \"Scope refers to the receiver of a function. Context refers to the variables that are available in that scope.\",\n    answer_d: \"Scope refers to the ability of a function to modify elements outside of its definition. The context is the JavaScript engine that runs the code.\",\n    correct_answer:  \"b\",\n    },\n\n    {\n    id: 2,\n    question:  \"In React, every time the render method in a react component is called...\",\n    answer_a: \"every DOM element on the entire page will be re-painted\",\n    answer_b: \"every DOM element referenced by the React component will be re-painted.\",\n    answer_c: \"only DOM elements with updated content will be re-painted\",\n    answer_d: \"DOM elements with updated content and any DOM elements refernced by the React component will be re-painted.\",\n    correct_answer:  \"c\",\n    },\n\n    {\n    id: 3,\n    question:  \"Which is true for the React lifecycle methold componentDidUpdate?\",\n    answer_a: \"It is only called on initial render.\",\n    answer_b: \"It is called immediately after updating occurs, but is not called on the initial render.\",\n    answer_c: \"It is called immediately after updating occurs, including the initial render.\",\n    answer_d: \"It can be used to prevent a component from mounting.\",\n    correct_answer:  \"b\",\n    },\n\n    {\n    id: 4,\n    question:  \"What is a Closure in JavaScript?\",\n    answer_a: \"A collection of all the variables in scope at the time of creation of the function.\",\n    answer_b: \"A collection of all the variables in the context at the time of creation of the function.\",\n    answer_c: \"Any function within another function.\",\n    answer_d: \"A different way of describing a callback.\",\n    correct_answer:  \"a\",\n    },\n\n    {\n    id: 5,\n    question:  \"What are the primitive data types in JavaScript?\",\n    answer_a: \"String, Number, Boolean, NaN, Object, null, Symbol\",\n    answer_b: \"String, Number, Boolean, undefined, Object, null, Symbol\",\n    answer_c: \"String, Number, Boolean, undefined, null, Symbol\",\n    answer_d: \"String, Number, Boolean, undefined, Object, Symbol\",\n    correct_answer:  \"c\",\n    },\n\n    {\n    id: 6,\n    question:  \"What is the difference between Attributes and Property in JavaScript?\",\n    answer_a: \"An Property provides more details about an element like id, type, value etc, whereas the Attribute is the value assigned to the Property like type='text' or value='name'.\",\n    answer_b: \"An Attribute provides more details about an element like id, type, value etc, whereas the Property is the value assigned to the Attrubute like type='text' or value='name'\",\n    answer_c: \"A Property is any value that belongs to an object, and an Attribute describes it.\",\n    answer_d: \"Unline Attritbutes, in general a standard HTML Property automatically becomes a property of DOM objects.\",\n    correct_answer:  \"b\",\n    },\n\n    {\n    id: 7,\n    question:  \"Which of the below are four ways an HTML element can be accessed by JavaScript code?\",\n    answer_a: \"getElementById, getElementsByClassName, queryTagName, querySelector\",\n    answer_b: \"getElementById, getElementsByClassName, getElementsByTagName, querySelector\",\n    answer_c: \"getElementById, getElementByClassName, getElementByTag, querySelector\",\n    answer_d: \"getElementById, getElementByClassName, getElementByTagName, querySelector\",\n    correct_answer:  \"b\",\n    },\n\n    {\n    id: 8,\n    question:  \"What is the difference between window & document in JavaScript?\",\n    answer_a: \"While window is a global object which holds variables, functions, history,and location, the document comes under the window and can be considered as the property of the window.\",\n    answer_b: \"Document and window both are global objects but document is called at runtime.\",\n    answer_c: \"While document is a global object which holds variables, functions, history,and location, the window comes under the document and can be considered as the property of the document.\",\n    answer_d: \"The window hold variables and functions whereas the document holds history and location of an object.\",\n    correct_answer:  \"a\",\n    },\n\n    {\n    id: 9,\n    question:  \"In JavaScript, what is the difference in how primitive and object types are passed in functions?\",\n    answer_a: \"Primitives are passed by value and objects are passed by reference.\",\n    answer_b: \"There is no difference in how they are passed.\",\n    answer_c: \"Objects are passed by value and primitive data types are passed by reference.\",\n    answer_d: \"Primitives can only be passed by value whereas objects can be passed by value or by reference.\",\n    correct_answer:  \"a\",\n    },\n\n    {\n    id: 10,\n    question:  \"Which of the following is not true about 'strict mode' in JavaScript?\",\n    answer_a: \"It can be enabled by adding “use strict” at the beginning of a file, a program, or a function.\",\n    answer_b: \"It enforces strict limits on the number of variables you can use in any given file.\",\n    answer_c: \"It enables better error-checking into JavaScript code.\",\n    answer_d: \"You cannot use implicitly declared variables or add a property to an object that is not extensible.\",\n    correct_answer:  \"b\",\n    },\n\n    {\n    id: 11,\n    question:  \"What is the difference between Call and Apply in JavaScript?\",\n    answer_a: \"Apply creates a copy of the function and sets the this keyword.\",\n    answer_b: \"Call accepts an array of arguments while Apply accepts comma-separated values.\",\n    answer_c: \"Apply accepts accepts an array of arguments instead of comma separated values.\",\n    answer_d: \"Call creates a copy of the function and sets the this keyword.\",\n    correct_answer:  \"c\",\n    },\n\n    {\n    id: 12,\n    question:  \"In JavaScript, what is the difference between event.preventDefault() and event.stopPropagation() methods?\",\n    answer_a: \"event.preventDefault() can only be used with controlled components.\",\n    answer_b: \"They are the same.\",\n    answer_c: \"The event.stopPropagation() method prevents the default behavior of an element. The event.preventDefault() method stops the propogation of an event in the bubbling or capturing phase.\",\n    answer_d: \"The event.preventDefault() method prevents the default behavior of an element. The event.stopPropagation() method stops the propogation of an event in the bubbling or capturing phase.\",\n    correct_answer:  \"d\",\n    },\n\n    {\n    id: 13,\n    question:  \"In JavaScript, what is event.currentTarget?\",\n    answer_a: \"It is the element on which the event occurred or the element that triggered the event.\",\n    answer_b: \"It is the element on which we attach the event handler explicitly.\",\n    answer_c: \"It is the element event that is handled during the current event loop.\",\n    answer_d: \"It is the parent element of the element where the event occurred.\",\n    correct_answer:  \"b\",\n    },\n\n    {\n    id: 14,\n    question:  \"Whis of these statements about var, let and const are not true?\",\n    answer_a: \"var declarations are globally scoped or function scoped while letand const are block scoped.\",\n    answer_b: \"var variables can be updated by value and re-declared within their scopes, but let variables cannot be re-declared. const variables can neither be updated nor re-declared.\",\n    answer_c: \"All three of these keywords are hoisted to the top of their scope and are initialized with undefined.\",\n    answer_d: \"While var and let can be declared without being initialized, const must be initialized during declaration.\",\n    correct_answer:  \"c\",\n    },\n\n    {\n    id: 15,\n    question:  \"Which of the following statements about ES6 Promise objects are true?\",\n    answer_a: \"Promises allow the writing of asynchronous JavaScript code in a linear manner.\",\n    answer_b: \"Promises prevent asynchronous functions from executing and transforms them into synchronous functions.\",\n    answer_c: \"Promises create a private scope around a function, preventing it from making changes to surround variables.\",\n    answer_d: \" Promises create the need for deeply nested callbacks for asynchronous operations.\",\n    correct_answer:  \"a\",\n    },\n\n    {\n    id: 16,\n    question:  \"Which of the following is not a reserved word in JavaScript?\",\n    answer_a: \"const\",\n    answer_b: \"type of\",\n    answer_c: \"void\",\n    answer_d: \"class\",\n    correct_answer:  \"b\",\n    },\n\n    {\n    id: 17,\n    question:  \"What is the difference between function declaration and function expression?\",\n    answer_a: \"Function expressions load only when the interpreter reaches that line of code, while function declarations are hoisted to the top of other code.\",\n    answer_b: \"Function declarations are not hoisted to the top of other code while expressions are.\",\n    answer_c: \"Unlike function expressions, function declarations retain a copy of the local variables from the scope where they were defined.\",\n    answer_d: \"Function declarations and function expressions are the same.\",\n    correct_answer:  \"a\",\n    },\n\n    {\n    id: 18,\n    question:  \"Which one of these is not a Hook?\",\n    answer_a: \"useState()\",\n    answer_b: \"useConst()\",\n    answer_c: \"useReducer()\",\n    answer_d: \"useEffect()\",\n    correct_answer:  \"b\",\n    },\n\n    {\n    id: 19,\n    question:  \"Which statement about Hooks is not true?\",\n    answer_a: \"Hooks are 100% backwards-compatible and can be used side by side with classes.\",\n    answer_b: \"Hooks are still in beta and not available yet.\",\n    answer_c: \"Hooks are completely opt-in; there is no need to rewrite existing code.\",\n    answer_d: \"Hooks are completely opt-in; there is no need to rewrite existing code.\",\n    correct_answer:  \"All of the above.\",\n    },\n\n    {\n    id: 20,\n    question:  \"What Hook should be used for data fetching?\",\n    answer_a: \"useDataFetch()\",\n    answer_b: \"useAPI()\",\n    answer_c: \"useEffect()\",\n    answer_d: \"useRequest()\",\n    correct_answer:  \"c\",\n    },\n];\n\n\n\n\n\n function createQuestionSet(questions) {\n\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n    }\n\n      let questionSet = [];\n      let questionsLength = questionsLibrary.length;\n      while (questionSet.length < 5) {\n        let randNum = getRandomInt(questionsLength);\n    \n        if (!questionSet.includes(questionsLibrary[randNum])) {\n          questionSet.push(questionsLibrary[randNum]);\n        }\n      }\n      return questionSet;\n}\n\n\nexport const questionSet = createQuestionSet(questionsLibrary);\n\n","import {\n    SET_ANSWERS,\n    SET_CURRENT_QUESTION,\n    SET_CURRENT_ANSWER,\n    SET_ERROR,\n    SET_SHOW_RESULTS,\n    RESET_QUIZ\n} from './types';\n\nexport default function quizReducer(state, action) {\n    switch (action.type) {\n        case SET_CURRENT_ANSWER:\n            return {\n                ...state,\n                currentAnswer: action.currentAnswer\n            };\n        case SET_CURRENT_QUESTION:\n            return {\n                ...state,\n                currentQuestion: action.currentQuestion,\n            };\n        case SET_ERROR:\n            return {\n                ...state,\n                error: action.error,\n            };\n        case SET_SHOW_RESULTS:\n            return {\n                ...state,\n                showResults: action.showResults,\n            };\n        case SET_ANSWERS:\n            return {\n                ...state,\n                answers: action.answers,\n            };\n        case RESET_QUIZ:\n            return {\n                ...state,\n                answers: [],\n                currentQuestion: 0,\n                currentAnswer: '',\n                showResults: false,\n                error: ''\n            };\n        default:\n            return state;\n    }\n\n}\n","import React, {useReducer} from 'react';\n\nimport Header from './components/Header';\nimport Progress from './components/Progress';\nimport Question from './components/Question';\nimport Answers from './components/Answers';\n\nimport QuizContext from './context/QuizContext';\n\nimport {questionSet, quizResultsCount } from \"./components/QuestionFile\";\n\nimport './reset.scss';\nimport './App.scss';\n\nimport { SET_ANSWERS, \n        SET_CURRENT_QUESTION,\n        SET_CURRENT_ANSWER, \n        SET_ERROR, \n        SET_SHOW_RESULTS, \n        RESET_QUIZ } \n  from './reducers/types';\n\nimport quizReducer from './reducers/QuizReducer';\n\nexport default function App() {\n\n  let questions = questionSet;\n\n  // let questions = questionsLibrary;\n\n\n  const initialState = {\n    questions,\n    currentQuestion: 0,\n    currentAnswer: '',\n    answers: [],\n    showResults: false,\n    error: '',\n  };\n\n  const [state,dispatch] = useReducer(quizReducer, initialState);\n  const {currentQuestion, currentAnswer, answers, showResults, error} = state;\n\n  // eslint-disable-next-line\n  const question = questions[currentQuestion];\n\n  const renderError = () => {\n    if (!error) {\n      return;\n    }\n    return <div className=\"error\"> </div>;\n  }\n\n  const renderResultMark = (question, answer) => {\n    if (question.correct_answer === answer.answer) {\n      return <span className=\"correct\">Guessed Correctly</span>\n    } \n    return <span className=\"failed\">Utter Failure</span> \n  }\n\n  const renderResultsData = () => {\n    \n    // questions.forEach( (el) => {\n    //   if (answers.key\n    // }\n    //   if(question)\n    // )\n\n    return answers.map( answer => {\n      const question = questions.find(\n        question => question.id === answer.questionId\n        );\n        \n\n        return (\n          <div key={question.id}>\n            {question.question} | {renderResultMark(question,answer)}\n          </div>\n        )\n        });\n  };\n\n  const restart = () => {\n    dispatch({type: RESET_QUIZ});\n  }\n\n  const next = () => {\n    const answer = {questionId: question.id, answer: currentAnswer};\n\n    if (!currentAnswer) {\n      dispatch({type: SET_ERROR, error: 'Select an option, dagnabbit!'})\n      return;\n    }\n    \n    answers.push(answer);\n\n    dispatch({ type: SET_ANSWERS, answers});\n    dispatch({type: SET_CURRENT_ANSWER, currentAnswer: ''});\n\n    if (currentQuestion + 1 < questions.length) {\n      dispatch({\n        type: SET_CURRENT_QUESTION, \n        currentQuestion: currentQuestion + 1\n      });\n      return;\n    }\n    dispatch({type: SET_SHOW_RESULTS, showResults: true});\n\n  };\n\n  if (showResults) {\n    return (\n      <div className=\"container results\">\n        <Header />\n        <h2>Results</h2>\n        <ul>\n          {renderResultsData()}\n        </ul>\n        <button className=\"btn btn-primary\" onClick={restart}>\n          Restart\n          </button>\n      </div>\n    )\n  } else {\n\n    return (\n      <QuizContext.Provider value={{ state, dispatch }}>\n        <div className=\"container\">\n          <Header />\n          <Progress total={questions.length} current={currentQuestion + 1} />\n          <Question />\n          {renderError()}\n          <Answers />\n\n          <button className=\"btn btn-primary\" onClick={next}>\n            Confirm and continue\n          </button>\n    \n        </div>\n      </QuizContext.Provider>\n    );\n  }\n\n};\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}